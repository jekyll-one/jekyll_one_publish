{
  "private": true,
  "name": "j1_starter",
  "version": "2019.4.12",
  "description": "Starter site for J1 Template",
  "homepage": "https://your.site",
  "author": {
    "name": "Your Name",
    "email": "name@mail.site",
    "url": "https://your.site"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://your.site"
  },
  "config": {
    "bumplevel": "patch",
    "mode": "production",
    "loglevel": "silent"
  },
  "engines": {
    "node": ">=10.0",
    "npm": ">=6.0",
    "yarn": ">=1.6"
  },
  "keywords": [
    "Jekyll",
    "One",
    "Server",
    "Web",
    "Site"
  ],
  "jekyll": {
    "configfile": "_config.yml",
    "gemfile": "Gemfile",
    "metadata": ".jekyll-metadata",
    "opt_incremental": "--incremental",
    "opt_interface": "0.0.0.0",
    "opt_web_port": "4000",
    "opt_web_url": "http://localhost:4000/",
    "opt_app_port": "5000",
    "opt_app_url": "http://localhost:5000/",
    "opt_profile": "",
    "opt_watch": "--watch",
    "opt_livereload": "--livereload",
    "vendor_path": "vendor/bundle",
    "vendorize": "false"
  },
  "algolia": {
    "admin_key": "my_admin_key"
  },
  "scripts": {
    "app": "cross-var cross-env if-env J1DOCKER=true && run-s app-docker || run-s app-local",
    "app-local": "run-p -s app-local:*",
    "app-local:utilsrv": "npm --prefix ./utilsrv --silent run utilsrv",
    "app-local:rackup": "cross-env SINATRA_ACTIVESUPPORT_WARNING=false bundle exec rackup -o $npm_package_jekyll_opt_interface -p $npm_package_jekyll_opt_app_port",
    "app-local:jekyll": "cross-var cross-env JEKYLL_ENV=$npm_package_config_mode BUNDLE_GEMFILE=$npm_package_jekyll_gemfile bundle exec jekyll b -c $npm_package_jekyll_configfile $npm_package_jekyll_opt_watch $npm_package_jekyll_opt_incremental",
    "app-local:open": "npm run delay-3s && cross-var opn $npm_package_jekyll_opt_app_url",
    "app-docker": "run-p -s app-docker:*",
    "app-docker:rackup": "cross-var bundle exec rackup -o $npm_package_jekyll_opt_interface -p $npm_package_jekyll_opt_app_port",
    "app-docker:open": "npm run delay-3s && cross-var opn $npm_package_jekyll_opt_app_url",
    "algolia": "cross-env ALGOLIA_API_KEY=$npm_package_algolia_admin_key bundle exec jekyll algolia",
    "algolia-check": "cross-env ALGOLIA_API_KEY=$npm_package_algolia_admin_key bundle exec jekyll algolia --dry-run --verbose",
    "detect-os": "echo Detecting OS .. && cross-env cross-var if-env OS=Windows_NT && cross-var echo OS detected as: $OS || OS=$(echo $(getos) && echo OS detected as: $OS",
    "detect-docker": "echo Detecting DOCKER .. && cross-var cross-env if-env J1DOCKER=true && cross-var cross-env echo Docker detected as: $J1DOCKER || echo no Docker detected",
    "built": "run-p -s built:*",
    "built:info": "echo Built the site for incremental mode ..",
    "built:do": "cross-env SINATRA_ACTIVESUPPORT_WARNING=false bundle exec jekyll b --incremental",
    "bundle": "shx rm -f Gemfile.lock && cross-env if-env BUNDLE_VENDORIZE=true && run-s bundle_vendor || run-s bundle_global",
    "bundle_global": "cross-env BUNDLE_GEMFILE=$npm_package_jekyll_gemfile bundle install",
    "bundle_vendor": "cross-env BUNDLE_GEMFILE=$npm_package_jekyll_gemfile bundle install --path $npm_package_jekyll_vendor_path",
    "rebuilt": "run-p -s rebuilt:*",
    "rebuilt:info": "echo Built the site from scratch ..",
    "rebuilt:clean": "bundle exec jekyll clean",
    "rebuilt:do": "cross-env SINATRA_ACTIVESUPPORT_WARNING=false bundle exec jekyll b --incremental",
    "delay-1s": "node ./node_modules/npm-delay 1000",
    "delay-2s": "node ./node_modules/npm-delay 2000",
    "delay-3s": "node ./node_modules/npm-delay 3000",
    "delay-5s": "node ./node_modules/npm-delay 5000",
    "delay-10s": "node ./node_modules/npm-delay 10000",
    "clean": "run-p -s clean:*",
    "clean:start": "echo Cleaning up project files ..",
    "clean:logs": "shx rm -f *.log",
    "clean:locks": "shx rm -f *.lock && shx rm -f package-lock.json",
    "clean:site": "echo Cleaning up site files .. && shx rm -f .jekyll-metadata && shx rm -rf _site",
    "credentials": "run-s -s credential:*",
    "credential:echo": "echo Store username and password ..",
    "credential:set": "git config credential.helper store && echo Finished.",
    "reset": "run-s -s reset:*",
    "reset:start": "echo Resetting the project to factory state ..",
    "reset:base-clean-files": "echo Cleaning up base modules .. && npm --silent run clean",
    "reset:utilsrv-clean-files": "echo Cleaning up utility server modules .. && npm --prefix ./utilsrv --silent run clean",
    "reset:utilsrv-clean-modules": "shx rm -rf ./utilsrv/node_modules",
    "reset:finished": "echo Finished.",
    "setup": "npm --silent run setup-start && npm --silent run setup-base && run-s -s setup:*",
    "setup-start": "echo Setting up the project for first use ..",
    "setup-base": "echo Bootstrapping base modules .. && echo J1 Project Base modules: > install.log && npm --silent i shx npm-run-all cross-var cross-env -D >> install.log && echo Finished.",
    "setup:env": "cross-var echo \"Configuring NODE|NPM environment ..\" && run-s -s set-env:*",
    "set-env:loglevel": "cross-var npm config set jekyll_one_com:loglevel  $npm_package_config_loglevel && cross-var echo \"LOGLEVEL: $npm_package_config_loglevel\"",
    "set-env:mode": "cross-var npm config set jekyll_one_com:mode $npm_package_config_mode && cross-var echo \"MODE:     $npm_package_config_mode\" && echo Finished.",
    "setup:node-modules-base": "echo Bootstrapping project modules .. && echo J1 Project modules: >> install.log && npm --silent install >> install.log",
    "setup:node-modules-utilsrv": "echo Bootstrapping utility server modules .. && echo J1 Utility Server modules: >> install.log && cd utilsrv && npm --silent install >> ../install.log && cd .. && echo Finished.",
    "setup:detect-os": "echo Detecting OS .. && cross-var cross-env if-env OS=Windows_NT && cross-var cross-env echo OS detected as: $OS || OS=$(echo $(getos)) && echo OS detected as: $OS",
    "setup:site": "echo Build the site .. && run-s -s built",
    "site": "cross-var cross-env if-env J1DOCKER=true && run-s site-docker || run-p -s site-local:*",
    "site-local:jekyll": "echo Startup the site - local .. && cross-env SINATRA_ACTIVESUPPORT_WARNING=false bundle exec jekyll s --incremental --livereload --open",
    "site-local:utilsrv": "npm --prefix ./utilsrv --silent run utilsrv",
    "site-docker": "echo Startup the site - dockerized .. && cross-env SINATRA_ACTIVESUPPORT_WARNING=false bundle exec jekyll s --host 0.0.0.0 --incremental --livereload",
    "site-docker:utilsrv": "npm --prefix ./utilsrv --silent run utilsrv",
    "deploy": "echo Add, Commit, Push and Deploy changed files to the Remotes && run-s -s git:*",
    "git:add": "git add .",
    "git:commit": "echo Commit files to repo && git commit -a",
    "git:github": "echo Push files to Github && git push github master",
    "git:j1git": "echo Push files to J1 Git Server && git push",
    "bump": "run-s -s ver && run-s -s bump:* && run-s -s ver",
    "ver": "cross-var echo \"project version: $npm_package_version\"",
    "bump:project": "cross-var npm version $npm_package_config_bumplevel",
    "bump-no-git": "cross-var npm --no-git-tag-version version $npm_package_config_bumplevel",
    "get_version": "run-p -s get_version:*",
    "get_version:jekyll": "cross-var cross-env JEKYLL_ENV=$npm_package_config_mode BUNDLE_GEMFILE=$npm_package_jekyll_gemfile bundle exec jekyll --version"
  },
  "dependencies": {
    "getos": "^3.1.0",
    "getos-cli": "^1.0.0",
    "if-env": "^1.0.4",
    "npm-delay": "^1.0.4",
    "opn-cli": "^3.1.0"
  },
  "devDependencies": {
    "cross-env": "^5.2.0",
    "cross-var": "^1.1.0",
    "npm-run-all": "^4.1.5",
    "shx": "^0.2.2"
  }
}
